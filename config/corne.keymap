/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&led_strip {
    chain-length = <0>;

    // chain-length = <27>;
    // 21 backlight + 6 glowlight
};

/ {
    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <180>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        ltc: ltc {
            compatible = "zmk,behavior-hold-tap";
            label = "layer tap custom";
            bindings = <&sl>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
        };
    };

    combos {
        compatible = "zmk,combos";

        mouse {
            bindings = <&to 5>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE   &kp Q                &kp W            &kp F                &kp P              &kp B             &kp J         &kp L               &kp U                 &kp Y             &kp SEMICOLON         &kp ESCAPE
&kp TAB     &hrm LEFT_CONTROL A  &hrm LEFT_ALT R  &hrm LEFT_COMMAND S  &hrm LEFT_SHIFT T  &kp G             &kp K         &hrm RIGHT_SHIFT N  &hrm RIGHT_COMMAND E  &hrm RIGHT_ALT I  &hrm RIGHT_CONTROL O  &kp BACKSPACE
&caps_word  &kp X                &kp C            &kp D                &kp V              &kp Z             &kp M         &kp H               &kp COMMA             &kp DOT           &kp BACKSLASH         &kp SLASH
                                                  &ltc 3 ESCAPE        &kp SPACE          &kp LEFT_SHIFT    &ltc 1 ENTER  &ltc 2 BACKSPACE    &ltc 4 DELETE
            >;
        };

        sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp HASH   &kp PERCENT  &kp ASTERISK   &kp LEFT_BRACE        &kp QUESTION       &trans     &kp RIGHT_BRACE        &kp CARET  &kp DOLLAR  &trans  &trans
&trans  &kp EQUAL  &kp AT       &kp AMPERSAND  &kp LEFT_PARENTHESIS  &kp SEMICOLON      &kp COLON  &kp RIGHT_PARENTHESIS  &kp PLUS   &kp MINUS   &trans  &trans
&trans  &trans     &kp HASH     &kp PERIOD     &kp LEFT_BRACKET      &kp EXCLAMATION    &trans     &kp RIGHT_BRACKET      &trans     &trans      &trans  &trans
                                &trans         &trans                &kp UNDER          &trans     &trans                 &trans
            >;
        };

        nav {
            bindings = <
&trans  &kp LEFT_BRACKET  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET    &kp K_REDO  &kp K_PASTE  &kp K_COPY      &kp K_CUT     &kp K_UNDO       &trans
&trans  &kp SEMICOLON     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL            &kp CAPS    &kp LEFT     &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans  &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH        &kp INSERT  &kp HOME     &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans
                                        &kp PERIOD    &kp N0        &kp MINUS            &trans      &trans       &trans
            >;
        };

        num-pad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &trans
                        &trans  &trans  &trans    &trans  &kp KP_NUMBER_0  &kp PERIOD
            >;
        };

        fn {
            bindings = <
&trans  &trans  &kp F7  &kp F8   &kp F9   &trans     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp F4  &kp F5   &kp F6   &trans     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp F1  &kp F2   &kp F3   &trans     &trans  &trans  &trans  &trans  &trans  &trans
                        &kp F10  &kp F11  &kp F12    &trans  &trans  &trans
            >;
        };

        mouse {
            bindings = <
&none  &none           &none         &none           &none            &none        &none              &none           &none           &none         &none            &none
&none  &msc SCRL_LEFT  &msc SCRL_UP  &msc SCRL_DOWN  &msc SCRL_RIGHT  &none        &mmv MOVE_X(-600)  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &mmv MOVE_X(600)
&none  &none           &none         &none           &none            &none        &none              &none           &none           &none         &none            &none
                                     &trans          &to 0            &mkp LCLK    &mkp RCLK          &to 0           &trans
            >;
        };
    };
};
